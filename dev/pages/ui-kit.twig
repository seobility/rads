{% set pageTitle = 'UI Kit' %}

{% extends "layouts::layout.twig" %}

{% block main %}
	<section>
		<div class="container">
			<div class="accordion js-accordion">
				<div class="accordion-item">
					<div class="accordion-header" id="headingOne">
						<button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
							<span class="ico"></span>
							Accordion Item #1
						</button>
					</div>
					<div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne">
						<div class="accordion-body">
							<strong>This is the first item's accordion body.</strong>
							It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the
							<code>.accordion-body</code>, though the transition does limit overflow.
						</div>
					</div>
				</div>
				<div class="accordion-item">
					<div class="accordion-header" id="headingTwo">
						<button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
							<span class="ico"></span>
							Accordion Item #2
						</button>
					</div>
					<div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo">
						<div class="accordion-body">
							<strong>This is the second item's accordion body.</strong>
							It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the
							<code>.accordion-body</code>, though the transition does limit overflow.
						</div>
					</div>
				</div>
				<div class="accordion-item">
					<div class="accordion-header" id="headingThree">
						<button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
							<span class="ico"></span>
							Accordion Item #3
						</button>
					</div>
					<div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree">
						<div class="accordion-body">
							<strong>This is the third item's accordion body.</strong>
							It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the
							<code>.accordion-body</code>, though the transition does limit overflow.
						</div>
					</div>
				</div>
			</div>
			<br><br>
			<button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-placement="top" title="Tooltip on top">
				Tooltip on top
			</button>
			<button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-placement="right" title="Tooltip on right">
				Tooltip on right
			</button>
			<button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-placement="bottom" title="Tooltip on bottom">
				Tooltip on bottom
			</button>
			<button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-placement="left" title="Tooltip on left">
				Tooltip on left
			</button>
		</div>
	</section>
{% endblock %}
